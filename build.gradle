// Top-level build file where you can add configuration options common to all sub-projects/modules.
/*plugins {
    id 'com.android.application' version '7.1.3' apply true
    id 'com.android.library' version '7.1.3' apply false
    id 'org.jetbrains.kotlin.android' version '1.5.30' apply false
}*/

buildscript{
    ext{
// global variables
        kotlin_version = '1.6.10'

        // local variables (use def)
        def androidx_test_version = '1.4.0'
        def appcompat_version = '1.4.1'
        def constraint_layout_version = '2.1.3'
        def material_version = '1.5.0'
        def arch_version = '2.1.0'
        def mock_version = '1.12.4'
        def work_version = '2.7.1'
        def javaxInject_version = '1'

        //Retrofit def
        def retrofit_gson_version = '2.9.0'
        def retrofit_version = '2.9.0'
        def gson_version = '2.9.0'
        def okhttp3_version = '4.10.0'

        //Room
        def room_version = '2.4.1'

        //Coroutines def
        def coroutines_android_version = '1.6.2'
        def lifecycle_version = '2.4.1'
        def navigation_version = "2.4.2"

        //Tests
        def junit_version = '4.13.2'
        def mockito_version = "4.3.1"
        def truth_version = '1.1.3'
        def jupyter_api = '5.8.2'

        //Android Test
        def junitAndroidTest_Version = '1.1.3'
        def espresso_version = '3.4.0'

        //CircleImageView
        def circleImageView_version = '3.1.0'

        //Glide
        def glideVersion = '4.13.0'
        def legacysupportVersion = '1.0.0'
        def glideCompilerVersion = '4.11.0'

        libraries = [

                // Coroutines
                "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_android_version",
                "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_android_version",

                // Android UI and appcompat
                "androidx.appcompat:appcompat:$appcompat_version",
                "com.google.android.material:material:$material_version",
                "androidx.constraintlayout:constraintlayout:$constraint_layout_version",
                "javax.inject:javax.inject:$javaxInject_version",

                // ViewModel and LiveData
                "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version",
                "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version",
                "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version",

                //Navigation
                "androidx.navigation:navigation-fragment-ktx:$navigation_version",
                "androidx.navigation:navigation-ui-ktx:$navigation_version",
                "androidx.work:work-runtime-ktx:$work_version",

                // Room for database
                "androidx.room:room-ktx:$room_version",

                // network & serialization
                "com.google.code.gson:gson:$gson_version",
                "com.squareup.retrofit2:converter-gson:$retrofit_gson_version",
                "com.squareup.retrofit2:retrofit:$retrofit_version",
                "com.squareup.okhttp3:logging-interceptor:$okhttp3_version",

                //CircleImageView
                "de.hdodenhof:circleimageview:$circleImageView_version",

                //Glide
                "com.github.bumptech.glide:glide:$glideVersion",
                "androidx.legacy:legacy-support-v4:$legacysupportVersion",
                "com.github.bumptech.glide:compiler:$glideCompilerVersion",


                //Mock
                "io.mockk:mockk:$mock_version"
        ]

        librariesKapt = [
                "androidx.room:room-compiler:$room_version",
        ]

        librariesDebug = [
                "com.google.truth:truth:$truth_version",
        ]

        testLibraries = [
                "junit:junit:$junit_version",
                "org.junit.jupiter:junit-jupiter-api:$jupyter_api",
                "org.junit.jupiter:junit-jupiter",

                // Coroutines testing
                "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_android_version",

                // mocks
                "org.mockito:mockito-core:$mockito_version",

                //  Architecture Components testing libraries
                "androidx.arch.core:core-testing:$arch_version"
        ]

        androidTestLibraries = [
                "junit:junit:$junit_version",
                "androidx.test:runner:$androidx_test_version",
                "androidx.test:rules:$androidx_test_version",

                // Espresso
                "androidx.test.espresso:espresso-core:$espresso_version",
                "androidx.test.espresso:espresso-contrib:$espresso_version",
                "androidx.test.espresso:espresso-intents:$espresso_version",

                //  Architecture Components testing libraries
                "androidx.arch.core:core-testing:$arch_version",
                "androidx.work:work-testing:$work_version",

                // Coroutines testing
                "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_android_version",
        ]

       /* debugImplementation ("androidx.fragment:fragment-testing:1.3.6") {
            exclude group:'androidx.test', module:'monitor'
        }*/
    }

    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.1.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}