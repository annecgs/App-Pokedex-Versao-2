// Generated by view binder compiler. Do not edit!
package com.example.pokedexapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.pokedexapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PokemonItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView candyCount;

  @NonNull
  public final TextView candyPokemon;

  @NonNull
  public final ImageView imagePokemon;

  @NonNull
  public final ImageView ivFavoriteItem;

  @NonNull
  public final LinearLayout linearLayout3;

  @NonNull
  public final TextView nomePokemon;

  private PokemonItemBinding(@NonNull ConstraintLayout rootView, @NonNull TextView candyCount,
      @NonNull TextView candyPokemon, @NonNull ImageView imagePokemon,
      @NonNull ImageView ivFavoriteItem, @NonNull LinearLayout linearLayout3,
      @NonNull TextView nomePokemon) {
    this.rootView = rootView;
    this.candyCount = candyCount;
    this.candyPokemon = candyPokemon;
    this.imagePokemon = imagePokemon;
    this.ivFavoriteItem = ivFavoriteItem;
    this.linearLayout3 = linearLayout3;
    this.nomePokemon = nomePokemon;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PokemonItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PokemonItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.pokemon_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PokemonItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.candyCount;
      TextView candyCount = ViewBindings.findChildViewById(rootView, id);
      if (candyCount == null) {
        break missingId;
      }

      id = R.id.candyPokemon;
      TextView candyPokemon = ViewBindings.findChildViewById(rootView, id);
      if (candyPokemon == null) {
        break missingId;
      }

      id = R.id.imagePokemon;
      ImageView imagePokemon = ViewBindings.findChildViewById(rootView, id);
      if (imagePokemon == null) {
        break missingId;
      }

      id = R.id.iv_favoriteItem;
      ImageView ivFavoriteItem = ViewBindings.findChildViewById(rootView, id);
      if (ivFavoriteItem == null) {
        break missingId;
      }

      id = R.id.linearLayout3;
      LinearLayout linearLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout3 == null) {
        break missingId;
      }

      id = R.id.nomePokemon;
      TextView nomePokemon = ViewBindings.findChildViewById(rootView, id);
      if (nomePokemon == null) {
        break missingId;
      }

      return new PokemonItemBinding((ConstraintLayout) rootView, candyCount, candyPokemon,
          imagePokemon, ivFavoriteItem, linearLayout3, nomePokemon);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
